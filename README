Weewar Bot Platform
===================

For now, it is just a Weewar bot doing nothing but a very basic and lame strategy.
Later this will become a platform to develop Weewar Bots (I hope!)
with its own programmation language. See my other project Calculette for an example.

But now, let's code !

Development status
==================

It can accept games, and play.

But it is not intelligent at all for now.
It creates some infantery and go for the first ennemie base it finds,
attacking ennemies in the way.

It is the basic loop weewar-ai put in it :)
Have to code the AI part now :)

Setup
=====

Install XmlSimple
  gem install 'xml-simple'

# set your login / developper key in the file ./accounts.txt
# Edit a "accounts.txt" file in the weewar directory and write your login and development key in it as "type:name:shortcut:login:key"
# an account by line. Type can be either "bot" or "human".
# The name of a bot must be the name of the bot class
# For an human, the name is not important. I mean in this code :)
#   for example:
#   bot:DaydBot:a:ai_Dayd:8f9t6U5Fnkuede23z79iRcmBn
#   human:Mick:m:MickTaiwan:9d26h9jU5Fnu23z79is8y7T
# The shortcut will be used to switch account easily using the interactive prompt.

Start
=====

to start a interatice prompt
  ruby main.rb
to start the bot alone (start a infinite loop)
  ruby lib/weewar.rb

Thanks
======

lot of code by Pistos:
  https://github.com/Pistos/weewar-ai

TODO
====

ordered by priority

  capture: ai_ChuckBot: linf@(29,3) => base @ (28,2)
  ai_ChuckBot: linf@(29,3) NOT FINISHED:
	  <?xml version="1.0" encoding="UTF-8"?>
  <error>Unit is done.</error>

  While playing: **  Failed to execute:
  <unit x='29' y='3'><move x='28' y='2'/><capture/></unit>
  ERROR from server: Unit is done.
  ./lib/../bots/../lib/unit.rb:406:in `send'
  ./lib/../bots/../lib/unit.rb:515:in `move_to'

- pathfinding very slow on big maps
- generate all xml first and send all xml at once to server
- Can't move ai_ChuckBot: linf@(3,3) to base @ (5,5)
  if pathfinder can't find a way because of a movable unit, it shall find the target closest hex to go.
  or at least there should be an options for.
- stop calling helping methods from weewar.com, the bot shall calculate all by itself
- test if some paths are made of waters, if the strategy is to make boats
- test if tere are air fields and if we need planes or not
- Code better AI based on Bot.rb !

Questions:
  Do we have to remember unit state (with their goal) between states ?
  Or the AI should be able to assign again the same goals (or not depending on the situation) between turns ?
  The situation needs to be evaluated anyway, but the AI should not forget what was the unit goals (or not?).

  Do we need a DB to store game states with goals?
  Or the AI can recreate them between sessions ?

